{"version":3,"sources":["components/utils/utils.ts","components/utils/search-matching.ts","components/utils/superformula.ts","components/diagram.ts","components/constants.ts","components/diagram-styles.ts","components/utils/url-query-param-utils.ts","components/app.tsx","serviceWorker.ts","index.tsx"],"names":["nodeRadiusSizes","default","node","group","hullOffset","defaultNodeSuperformulaType","d","shapeType","nodes","getRadius","resultRadius","size","biggestSize","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","undefined","_step7","_iterator7","Symbol","iterator","next","done","iNode","value","err","return","getHighlightedRadius","Math","sqrt","convexHulls","hulls","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","n","i","strToLowerOrEmpty","hasOwnProperty","offsetAndRadius","push","x","y","hullset","_i","_Object$keys","Object","keys","length","newHull","d3","path","drawCluster","curve","tension","transitionLinear","duration","ease","isNodeNotString","isLinkNotNode","source","getNodeId","nodeId","name","getLinkGradientId","sourceChild","getLinkSourceName","targetChild","target","getLinkTargetName","replace","getNodeNameOrGroup","getNodeNameAndGroup","getLinkSourceNameOrGroup","link","getLinkTargetNameOrGroup","getNodeOrLinkTitle","nodeOrLink","title","doGroupsMatch","node1","node2","findIndex","arr","callback","nodeTextShiftRight","multiplier","darkenIfInvertedBackground","color","isInverted","darker","toString","strEquals","val1","val2","toLowerCase","val","GetMatchedNodes","highlightedNodes","nodeElements","filter","nodeNameOrGroup","utils","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","DoesLinkMatch","l","onlyLinksWithHighlightedSourceAndTarget","linkSourceNameOrGroup","linkTargetNameOrGroup","highlightedSourceFound","highlightedTargetFound","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","GetMatchedLinks","linkElements","GetMatchedLinkGradients","GetMatchedHulls","hullElements","h","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","highlightedNode","highlightedNodesChangedCallback","sLine","Superformula","classCallCheck","this","sType","sSize","sSegments","getPath","bind","f","sizeMultiplier","typeKey","SuperformulaTypes","_superformulaPath","params","diameter","t","dt","PI","r","ts","points","m","pow","abs","cos","a","n2","sin","b","n3","n1","SQRT1_2","asterisk","bean","butterfly","circle","clover","cloverFour","cross","diamond","drop","ellipse","gear","heart","heptagon","octagon","hexagon","malteseCross","pentagon","rectangle","roundedStar","square","star","triangle","colorScale","schemeDark2","slice","defaultSupaDupaPath","type","segments","nodeStateDefault","className","nodeTextShiftMultiplier","shapeSuperformula","nodeStateHighlight","nodeStateSearch","nodeStateHighlightNeighbour","nodeStateUnhighlighted","DiagramStyles","showOnlyHighlighted","invertedBackground","showAllLabels","mouseOverLock","mouseOutLock","createClass","key","nodeEles","_this","clearStates","classed","nodeShape","selectAll","nodeText","transition","attr","constants","style","opacity","text","bigSuperdupaPath","bd","_this2","_this3","_this4","nodeState","getNodeStateProperties","mouseOverTransition","tween","nodeData","data","shiftFrom","shiftTo","Number","mouseOutTransition","linkEles","linkGradientEles","stopOne","stopTwo","hullEles","load","highlightedNodesChangedCallbackArg","initialHighlightedNodeNames","initiallyShowOnlyHighlighted","diagramWidth","floor","window","getComputedStyle","document","getElementById","width","diagramHeight","height","svg","append","on","onBackgroundDiagramClick","svgDefs","zoom","scaleExtent","translateExtent","zoomed","call","simulation","force","id","distance","slDatum","combinedRadiuses","strength","s","radius","distanceMin","html","process","then","response","links","select","remove","updateSimulation","_loop","highlightedNodeName","nodeIdx","hn","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","cn","ungroupNodes","searchForNodes","searchText","hasSearchedForNodes","matchedNodes","indexOf","searchUtils","diagramStyles","show","highlightNodes","biggestNodePerGroup","linkGradients","hasForceSimulation","transform","zoomFactor","k","tickHulls","tickLinks","exit","linkGradientsEnter","enter","applyLinkGradientDefault","merge","linkEnterElements","applyLinkMouseOver","applyLinkMouseOut","PopulateInfoBox","applyLinkDefault","drager","dragged","dragended","nodeEnterElements","applyNodeMouseOver","applyNodeMouseOut","onNodeClick","onNodeDblclick","applyNodeDefault","hullEnterElements","applyHullDefault","groupedDictionaryOfNodes","groupedDic","nodeWithMostNumberOfInternalLinks","nodeWithLinkCount","numberOfInternalLinks","nodeName","kLink","isInternalLink","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","lNode","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","alpha","biggestNode","x1","y1","alphaMultiplier","xr","yr","xd","yd","bxr","byr","bxd","byd","isNaN","alphaMin","alphaDecay","alphaTarget","restart","stop","dragSimulationRestarted","idx","fx","fy","active","highlightedNodeIdx","splice","stopPropagation","newNodeGroup","internalLinks","_loop2","_k","kNode","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","mLink","m1","m1Link","regroupNodes","k1","random","k2","Array","prototype","apply","k3Link","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","childMNode","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","lLink","map","matchedNodesData","matchedLinks","matchedLinkGradients","unmatchedLinks","unmatchedLinkGradients","neighbourNodes","highlightedLinks","nodeNeighbourNamesOrGroups","highlightedNodeNamesOrGroups","highlightedLink","some","nog","nameOrGroup","highlightedAndNeighbourNodesData","concat","unmatchedNodes","matchedHulls","unmatchedHulls","highlightedHulls","applyNodeSearch","applyNodeHighlight","applyNodeHighlightedNeighbour","applyNodeUnhighlighted","applyLinkHighlight","applyLinkUnhighlighted","applyLinkGradientHighlight","applyLinkGradientUnhighlighted","applyHullHighlight","applyHullUnhighlighted","divServiceDetails","notes","tableElement","timestamp","details","tableData","row","getUrlParameter","sParam","keysString","sURLVariables","split","sUrlVariable","sParameterName","getKeysFromString","decodeURIComponent","location","search","substring","setUrlParameter","sValue","queryFilters","paramPairs","paramPair","parameterUpdated","join","updateKeysInString","history","pushState","paramArraySeparator","urlParamLabelShowOnlyHighlighted","urlParamLabelHighlightedNodes","App","_React$Component","props","possibleConstructorReturn","getPrototypeOf","highlightedNodeNames","paramValueStr","getUrlParameterAsArray","state","inputHighlightText","invertBackground","handleInputHighlightText","assertThisInitialized","handleShowAllLabels","handleShowOnlyHighlighted","handleHighlightedNodesChanged","updateShowAllLabels","updateInputHighlightText","handleInvertBackground","handleHasForceSimulation","handleSearchForNodesClick","inherits","diagram","react","onChange","disabled","onClick","checked","htmlFor","setState","txt","sValueArray","setUrlParameterAsArray","event","newVal","currentTarget","preventDefault","invert","React","Boolean","hostname","match","ReactDOM","render","react_default","createElement","app_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a8f1ea87.chunk.js","sourcesContent":["import * as d3 from 'd3';\nimport { Link, Node, Hull } from '../data-interfaces';\n\nexport const nodeRadiusSizes = { default: 3, node: 3, group: 7 };\nexport const hullOffset = 15;\nexport const nodeStateNormal = 'node-state-normal';\nexport const nodeStateHovered = 'node-state-hover';\n\nexport function defaultNodeSuperformulaType(d: Node): string {\n  let shapeType = 'circle';\n  if (d.nodes) {\n    shapeType = 'circle'; // \"octagon\";\n  }\n  return shapeType;\n}\n\nexport function defaultNodeSuperformulaSize(d: Node): number {\n  return 2 * getRadius(d);\n}\n\n// Transform the list of nodes into groups\nexport function getBiggestNodesPerGroup(nodes: Node[], links: Link[]) {\n  const groupedDictionaryOfNodes: { [key: string]: Node } = {};\n  for (const node of nodes) {\n    if (node.group) {\n      const group = strToLowerOrEmpty(node.group);\n      groupedDictionaryOfNodes[group] = groupedDictionaryOfNodes[group] || node;\n      groupedDictionaryOfNodes[group] =\n        !groupedDictionaryOfNodes[group] || (groupedDictionaryOfNodes[group].size || nodeRadiusSizes.default) < (node.size || nodeRadiusSizes.default)\n          ? node\n          : groupedDictionaryOfNodes[group];\n      if (!groupedDictionaryOfNodes[group].size) {\n        groupedDictionaryOfNodes[group].size = getRadius(groupedDictionaryOfNodes[group]);\n      }\n    }\n  }\n\n  for (const groupedDicPropName of d3.keys(groupedDictionaryOfNodes)) {\n    let groupedDic = groupedDictionaryOfNodes[groupedDicPropName];\n    if (groupedDic.size === nodeRadiusSizes.default) {\n      let nodeWithMostNumberOfInternalLinks = null;\n      // If the biggest node is the default size, ensure the biggest node is the one with the most \"internal\" links\n      for (const jNode of groupedDic.nodes!) {\n        const nodeWithLinkCount = { node: jNode, numberOfInternalLinks: 0 };\n        const nodeName = nodeWithLinkCount.node.name;\n        for (const kLink of links) {\n          let isInternalLink = false;\n          if (strEquals(kLink.source, nodeName) || strEquals(kLink.sourceChild, nodeName)) {\n            for (const lNode of groupedDic.nodes!) {\n              if (strEquals(kLink.target, lNode.name) || strEquals(kLink.targetChild, lNode.name)) {\n                isInternalLink = true;\n                break;\n              }\n            }\n          } else if (strEquals(kLink.target, nodeName) || strEquals(kLink.targetChild, nodeName)) {\n            for (const lNode of groupedDic.nodes!) {\n              if (strEquals(kLink.source, lNode.name) || strEquals(kLink.sourceChild, lNode.name)) {\n                isInternalLink = true;\n                break;\n              }\n            }\n          }\n          if (isInternalLink) {\n            nodeWithLinkCount.numberOfInternalLinks++;\n          }\n        }\n        if (!nodeWithMostNumberOfInternalLinks || nodeWithLinkCount.numberOfInternalLinks > nodeWithMostNumberOfInternalLinks.numberOfInternalLinks) {\n          nodeWithMostNumberOfInternalLinks = nodeWithLinkCount;\n        }\n      }\n      groupedDic = nodeWithMostNumberOfInternalLinks!.node;\n    }\n  }\n  return groupedDictionaryOfNodes;\n}\n\nexport function getRadius(d: Node): number {\n  let resultRadius = nodeRadiusSizes.node;\n  if (d.size) {\n    resultRadius = d.size;\n  } else if (d.nodes) {\n    resultRadius = nodeRadiusSizes.group;\n    let biggestSize = d.nodes[0].size || nodeRadiusSizes.default;\n    for (const iNode of d.nodes) {\n      biggestSize = (iNode.size || nodeRadiusSizes.default) > biggestSize ? iNode.size || nodeRadiusSizes.default : biggestSize;\n    }\n    resultRadius = biggestSize > resultRadius ? biggestSize : resultRadius;\n  }\n  return resultRadius;\n}\n\nexport function getHighlightedRadius(d: Node): number {\n  const resultRadius = getRadius(d) + Math.sqrt(getRadius(d));\n  return resultRadius;\n}\n\n// For Hulls\nexport function convexHulls(nodes: Node[]): Hull[] {\n  const hulls: { [key: string]: Array<[number, number]> } = {};\n\n  // create point sets\n  for (const n of nodes) {\n    if (n.nodes || !n.group) {\n      continue;\n    }\n    const i: string = strToLowerOrEmpty(n.group);\n    if (!hulls.hasOwnProperty(i)) {\n      hulls[i] = [];\n    }\n    const offsetAndRadius = hullOffset + getRadius(n) + Math.sqrt(getRadius(n));\n    hulls[i].push([(n.x || 0) - offsetAndRadius, (n.y || 0) - offsetAndRadius]);\n    hulls[i].push([(n.x || 0) - offsetAndRadius, (n.y || 0) + offsetAndRadius]);\n    hulls[i].push([(n.x || 0) + offsetAndRadius, (n.y || 0) - offsetAndRadius]);\n    hulls[i].push([(n.x || 0) + offsetAndRadius, (n.y || 0) + offsetAndRadius]);\n  }\n\n  // create convex hulls\n  const hullset: Hull[] = [];\n  for (const i of Object.keys(hulls)) {\n    const newHull = d3.polygonHull(hulls[i]);\n    if (newHull) {\n      hullset.push({ group: i, path: newHull });\n    }\n  }\n\n  return hullset;\n}\n\nexport function drawCluster(d: { path: Array<[number, number]> }): string | null {\n  const curve = d3.line().curve(d3.curveCardinalClosed.tension(0.85));\n  const clusterPath = curve(d.path);\n  return clusterPath; // 0.8\n}\n\nexport function getGroup(n: Node): string | null {\n  return n.group || null;\n}\n// End For Hulls\n\n// Reusable transition\nexport function transitionLinear(duration: number): d3.Transition<d3.BaseType, any, any, any> {\n  return d3\n    .transition()\n    .duration(duration)\n    .ease(d3.easeLinear) as any;\n}\n\nexport function isNodeNotString(x: Node | string): x is Node {\n  return typeof x !== 'string';\n}\n\nexport function isLinkNotNode(x: Node | Link): x is Link {\n  return (x as Link).source !== undefined;\n}\n\nexport function getNodeId(d: Node | string): string {\n  let nodeId: string = '';\n  if (isNodeNotString(d)) {\n    if (d.name && d.group) {\n      nodeId = d.group + '-' + d.name;\n    } else if (d.name) {\n      nodeId = d.name;\n    } else if (d.group) {\n      nodeId = d.group;\n    }\n  } else {\n    nodeId = d;\n  }\n  return nodeId;\n}\n\nfunction getLinkSourceName(d: Link): string {\n  if (d.sourceChild) {\n    if (isNodeNotString(d.sourceChild)) {\n      return d.sourceChild.name!;\n    } else {\n      return d.sourceChild;\n    }\n  } else {\n    if (isNodeNotString(d.source)) {\n      return d.source.name!;\n    } else {\n      return d.source;\n    }\n  }\n}\n\nfunction getLinkTargetName(d: Link): string {\n  if (d.targetChild) {\n    if (isNodeNotString(d.targetChild)) {\n      return d.targetChild.name!;\n    } else {\n      return d.targetChild;\n    }\n  } else {\n    if (isNodeNotString(d.target)) {\n      return d.target.name!;\n    } else {\n      return d.target;\n    }\n  }\n}\n\nexport function getLinkGradientId(d: Link) {\n  const gradientId: string = 'linkGrad-' + getLinkSourceName(d) + getLinkTargetName(d);\n  return gradientId\n    .replace(/ /g, '_')\n    .replace(/\\(|\\)/g, '__')\n    .replace(/[^A-Za-z\\w\\-\\:\\.]/g, '___');\n}\n\n// The Node Name or Group is used to identify the node\nexport function getNodeNameOrGroup(node: Node): string {\n  return node.name || node.group || '';\n}\n\nexport function getNodeNameAndGroup(node: Node): string {\n  return (node.group || '') + '-' + (node.name || '');\n}\n\nexport function getLinkSourceNameOrGroup(link: Link): string {\n  return typeof link.source === 'string' ? link.source : getNodeNameOrGroup(link.source);\n}\n\nexport function getLinkTargetNameOrGroup(link: Link): string {\n  return typeof link.target === 'string' ? link.target : getNodeNameOrGroup(link.target);\n}\n\n// The title can be used to identify the node or link\nexport function getNodeOrLinkTitle(nodeOrLink: Node | Link): string {\n  let title = '';\n  if (isLinkNotNode(nodeOrLink)) {\n    const sourceName = getLinkSourceNameOrGroup(nodeOrLink);\n    const targetName = getLinkTargetNameOrGroup(nodeOrLink);\n    title = 'Link: ' + sourceName + ' - ' + targetName;\n  } else {\n    title = getNodeNameOrGroup(nodeOrLink);\n  }\n  return title;\n}\n\nexport function doGroupsMatch(node1: Node, node2: Node): boolean {\n  return node1 && node2 && node1.group != null && node2.group != null && strToLowerOrEmpty(node1.group) === strToLowerOrEmpty(node2.group);\n}\n\nexport function findIndex(arr: any[], callback: (arg: any) => boolean): number {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nexport function nodeTextShiftRight(d: Node, multiplier?: number) {\n  const shiftRight = (getRadius(d) + 1) * (multiplier || 1.5);\n  return 'translate(' + shiftRight + ',0)';\n}\n\nexport function nodeTextOpacity(d: Node, showAllLabels: boolean): number {\n  let opacity = 0;\n  if (getRadius(d) >= 10 || showAllLabels) {\n    opacity = 1;\n  }\n  return opacity;\n}\n\nexport function darkenIfInvertedBackground(color: string, isInverted: boolean): string {\n  return isInverted\n    ? d3\n        .hsl(color)\n        .darker(2)\n        .toString()\n    : color;\n}\n\nexport function setSimulationAlpha(simulation: d3.Simulation<Node, Link>) {\n  simulation\n    .alpha(1)\n    .alphaMin(0.01)\n    .alphaDecay(0.02)\n    .alphaTarget(0);\n}\n\n/**\n * Safe, flexible string equals, case insensitive\n */\nexport function strEquals(val1: any | undefined, val2: any | undefined) {\n  return val1 != null && val2 != null && typeof val1 === 'string' && typeof val2 === 'string' && val1.toLowerCase() === val2.toLowerCase();\n}\n\nexport function strToLowerOrEmpty(val: string | undefined | null): string {\n  return val && val != null ? val.toLowerCase() : '';\n}\n","import * as d3 from 'd3';\nimport { Link, Node, Hull } from '../data-interfaces';\nimport * as utils from './utils';\n\n// Search for nodes using given text (this is not an exact match)\nexport function SearchNodes(\n  searchText: string,\n  nodeElements: d3.Selection<SVGGElement, Node, d3.BaseType, any>\n): d3.Selection<SVGGElement, Node, d3.BaseType, any> {\n  const matchedNodes = nodeElements.filter((d: Node) => {\n    const title = utils.getNodeOrLinkTitle(d);\n    if (title.length > 0) {\n      return title.toLowerCase().indexOf(searchText.toLowerCase()) !== -1;\n    }\n    return false;\n  });\n  return matchedNodes;\n}\n\n// Get the nodes matching those highlighted\nexport function GetMatchedNodes(\n  highlightedNodes: Node[],\n  nodeElements: d3.Selection<SVGGElement, Node, d3.BaseType, any>\n): d3.Selection<SVGGElement, Node, d3.BaseType, any> {\n  const unmatchedNodes = nodeElements.filter((d: Node) => {\n    const nodeNameOrGroup = utils.getNodeNameOrGroup(d);\n    if (nodeNameOrGroup.length > 0) {\n      for (const highlightedNode of highlightedNodes) {\n        const highlightedNodeNameOrGroup = utils.getNodeNameOrGroup(highlightedNode);\n        if (utils.strEquals(nodeNameOrGroup, highlightedNodeNameOrGroup)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  });\n  return unmatchedNodes;\n}\n\n// Get the nodes not matching those highlighted\nexport function GetUnmatchedNodes(\n  highlightedNodes: Node[],\n  nodeElements: d3.Selection<SVGGElement, Node, d3.BaseType, any>\n): d3.Selection<SVGGElement, Node, d3.BaseType, any> {\n  return nodeElements.filter(\n    a =>\n      GetMatchedNodes(highlightedNodes, nodeElements)\n        .data()\n        .indexOf(a) === -1\n  );\n}\n\nfunction DoesLinkMatch(highlightedNodes: Node[], l: Link, onlyLinksWithHighlightedSourceAndTarget: boolean): boolean {\n  const linkSourceNameOrGroup = utils.getLinkSourceNameOrGroup(l);\n  const linkTargetNameOrGroup = utils.getLinkTargetNameOrGroup(l);\n  let highlightedSourceFound = false;\n  let highlightedTargetFound = false;\n  // Either the source of the target must be a highlighted node\n  for (const highlightedNode of highlightedNodes) {\n    const nodeNameOrGroup = utils.getNodeNameOrGroup(highlightedNode);\n    if (onlyLinksWithHighlightedSourceAndTarget === true) {\n      if (utils.strEquals(nodeNameOrGroup, linkSourceNameOrGroup)) {\n        highlightedSourceFound = true;\n      }\n      if (utils.strEquals(nodeNameOrGroup, linkTargetNameOrGroup)) {\n        highlightedTargetFound = true;\n      }\n    } else if (utils.strEquals(nodeNameOrGroup, linkSourceNameOrGroup) || utils.strEquals(nodeNameOrGroup, linkTargetNameOrGroup)) {\n      return true;\n    }\n  }\n  return highlightedSourceFound && highlightedTargetFound;\n}\n\n// Get the links to the highlighted nodes\nexport function GetMatchedLinks(\n  highlightedNodes: Node[],\n  linkElements: d3.Selection<SVGLineElement, Link, d3.BaseType, any>,\n  onlyLinksWithHighlightedSourceAndTarget: boolean\n): d3.Selection<SVGLineElement, Link, d3.BaseType, any> {\n  const matchedLinks = linkElements.filter((l: Link) => {\n    return DoesLinkMatch(highlightedNodes, l, onlyLinksWithHighlightedSourceAndTarget);\n  });\n  return matchedLinks;\n}\n\nexport function GetMatchedLinkGradients(\n  highlightedNodes: Node[],\n  linkElements: d3.Selection<SVGLinearGradientElement, Link, d3.BaseType, any>,\n  onlyLinksWithHighlightedSourceAndTarget: boolean\n): d3.Selection<SVGLinearGradientElement, Link, d3.BaseType, any> {\n  const matchedLinks = linkElements.filter((l: Link) => {\n    return DoesLinkMatch(highlightedNodes, l, onlyLinksWithHighlightedSourceAndTarget);\n  });\n  return matchedLinks;\n}\n\n// Get the links with no direct connection to the highlighted nodes\nexport function GetUnmatchedLinks(\n  highlightedNodes: Node[],\n  linkElements: d3.Selection<SVGLineElement, Link, d3.BaseType, any>,\n  onlyLinksWithHighlightedSourceAndTarget: boolean\n): d3.Selection<SVGLineElement, Link, d3.BaseType, any> {\n  return linkElements.filter(\n    a =>\n      GetMatchedLinks(highlightedNodes, linkElements, onlyLinksWithHighlightedSourceAndTarget)\n        .data()\n        .indexOf(a) === -1\n  );\n}\n\nexport function GetUnmatchedLinkGradients(\n  highlightedNodes: Node[],\n  linkElements: d3.Selection<SVGLinearGradientElement, Link, d3.BaseType, any>,\n  onlyLinksWithHighlightedSourceAndTarget: boolean\n): d3.Selection<SVGLinearGradientElement, Link, d3.BaseType, any> {\n  return linkElements.filter(\n    a =>\n      GetMatchedLinkGradients(highlightedNodes, linkElements, onlyLinksWithHighlightedSourceAndTarget)\n        .data()\n        .indexOf(a) === -1\n  );\n}\n\n// Get the hulls with highlighted nodes inside\nexport function GetMatchedHulls(\n  highlightedNodes: Node[],\n  hullElements: d3.Selection<SVGPathElement, Hull, d3.BaseType, any>\n): d3.Selection<SVGPathElement, Hull, d3.BaseType, any> {\n  const matchedHulls = hullElements.filter((h: Hull) => {\n    if (h.group.length > 0) {\n      for (const highlightedNode of highlightedNodes) {\n        if (utils.strEquals(h.group, highlightedNode.group)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  });\n  return matchedHulls;\n}\n\n// Get the hulls with highlighted nodes inside\nexport function GetUnmatchedHulls(\n  highlightedHulls: Hull[],\n  hullElements: d3.Selection<SVGPathElement, Hull, d3.BaseType, any>\n): d3.Selection<SVGPathElement, Hull, d3.BaseType, any> {\n  return hullElements.filter(\n    a =>\n      GetMatchedHulls(highlightedHulls, hullElements)\n        .data()\n        .indexOf(a) === -1\n  );\n}\n\nexport function GetNeighbourNodes(\n  highlightedNodes: Node[],\n  highlightedLinks: Link[],\n  nodeElements: d3.Selection<SVGGElement, Node, d3.BaseType, any>\n): d3.Selection<SVGGElement, Node, d3.BaseType, any> {\n  // get list of nodes that are neighbours to the highlighted nodes\n  const nodeNeighbourNamesOrGroups: string[] = [];\n  const highlightedNodeNamesOrGroups: string[] = highlightedNodes.map(n => utils.getNodeNameOrGroup(n));\n  for (const highlightedLink of highlightedLinks) {\n    const linkSourceNameOrGroup = utils.getLinkSourceNameOrGroup(highlightedLink);\n    const linkTargetNameOrGroup = utils.getLinkTargetNameOrGroup(highlightedLink);\n    if (\n      highlightedNodeNamesOrGroups.some(nog => utils.strEquals(nog, linkSourceNameOrGroup)) &&\n      !highlightedNodeNamesOrGroups.some(nog => utils.strEquals(nog, linkTargetNameOrGroup))\n    ) {\n      // the target node is a neighbour\n      nodeNeighbourNamesOrGroups.push(linkTargetNameOrGroup);\n    } else if (\n      !highlightedNodeNamesOrGroups.some(nog => utils.strEquals(nog, linkSourceNameOrGroup)) &&\n      highlightedNodeNamesOrGroups.some(nog => utils.strEquals(nog, linkTargetNameOrGroup))\n    ) {\n      // the source node is a neighbour\n      nodeNeighbourNamesOrGroups.push(linkSourceNameOrGroup);\n    }\n  }\n  // now that we have a list of nodes that are neighbours, filter by them\n  const neighbourNodeElements = nodeElements.filter((n: Node) => {\n    const nameOrGroup = utils.getNodeNameOrGroup(n);\n    return nodeNeighbourNamesOrGroups.indexOf(nameOrGroup) > -1;\n  });\n  return neighbourNodeElements;\n}\n","// Modified from source https://github.com/d3/d3-plugins/blob/master/superformula/superformula.js\nimport * as d3 from 'd3';\nimport { Node } from '../data-interfaces';\n\nconst sLine = d3.line();\n\nclass Superformula {\n  private sType: (d: Node) => string;\n  private sSize: (d: Node) => number;\n  private sSegments: number;\n\n  constructor() {\n    // defaults\n    this.sType = d => 'circle';\n    this.sSize = d => 1;\n    this.sSegments = 360;\n\n    this.getPath = this.getPath.bind(this);\n  }\n\n  public type(f: (d: Node) => string) {\n    this.sType = f;\n    return this;\n  }\n  public size(f: (d: Node) => number) {\n    this.sSize = f;\n    return this;\n  }\n  public segments(d: number) {\n    this.sSegments = d;\n    return this;\n  }\n\n  public getPath(d: Node, sizeMultiplier?: number): string {\n    let sType: SuperformulaTypeObject;\n    const typeKey = this.sType(d);\n    sType = SuperformulaTypes[typeKey];\n    return this._superformulaPath(sType, this.sSegments, this.sSize(d) * (sizeMultiplier || 1));\n  }\n\n  public allTypes(): string[] {\n    return d3.keys(SuperformulaTypes);\n  }\n\n  private _superformulaPath(params: SuperformulaTypeObject, n: number, diameter: number): string {\n    let i: number = -1;\n    const dt: number = (2 * Math.PI) / n;\n    let t: number;\n    let r: number = 0;\n    let x: number;\n    let y: number;\n    const ts: number[] = [];\n    const points: Array<[number, number]> = [];\n\n    while (++i < n) {\n      t = (params.m * (i * dt - Math.PI)) / 4;\n      t = Math.pow(\n        Math.abs(Math.pow(Math.abs(Math.cos(t) / params.a), params.n2) + Math.pow(Math.abs(Math.sin(t) / params.b), params.n3)),\n        -1 / params.n1\n      );\n      if (t > r) {\n        r = t;\n      }\n      ts.push(t);\n    }\n\n    r = (diameter * Math.SQRT1_2) / r;\n    i = -1;\n    while (++i < n) {\n      x = (t = ts[i] * r) * Math.cos(i * dt);\n      y = t * Math.sin(i * dt);\n      points.push([Math.abs(x) < 1e-6 ? 0 : x, Math.abs(y) < 1e-6 ? 0 : y]);\n    }\n\n    return sLine(points) + 'Z';\n  }\n}\n\ninterface SuperformulaTypeObject {\n  m: number;\n  n1: number;\n  n2: number;\n  n3: number;\n  a: number;\n  b: number;\n}\n\ninterface SuperformulaTypes {\n  asterisk: SuperformulaTypeObject;\n  bean: SuperformulaTypeObject;\n  butterfly: SuperformulaTypeObject;\n  circle: SuperformulaTypeObject;\n  clover: SuperformulaTypeObject;\n  cloverFour: SuperformulaTypeObject;\n  cross: SuperformulaTypeObject;\n  diamond: SuperformulaTypeObject;\n  drop: SuperformulaTypeObject;\n  ellipse: SuperformulaTypeObject;\n  gear: SuperformulaTypeObject;\n  heart: SuperformulaTypeObject;\n  heptagon: SuperformulaTypeObject;\n  octagon: SuperformulaTypeObject;\n  hexagon: SuperformulaTypeObject;\n  malteseCross: SuperformulaTypeObject;\n  pentagon: SuperformulaTypeObject;\n  rectangle: SuperformulaTypeObject;\n  roundedStar: SuperformulaTypeObject;\n  square: SuperformulaTypeObject;\n  star: SuperformulaTypeObject;\n  triangle: SuperformulaTypeObject;\n  [key: string]: SuperformulaTypeObject;\n}\n\nconst SuperformulaTypes: SuperformulaTypes = {\n  asterisk: { m: 12, n1: 0.3, n2: 0, n3: 10, a: 1, b: 1 },\n  bean: { m: 2, n1: 1, n2: 4, n3: 8, a: 1, b: 1 },\n  butterfly: { m: 3, n1: 1, n2: 6, n3: 2, a: 0.6, b: 1 },\n  circle: { m: 4, n1: 2, n2: 2, n3: 2, a: 1, b: 1 },\n  clover: { m: 6, n1: 0.3, n2: 0, n3: 10, a: 1, b: 1 },\n  cloverFour: { m: 8, n1: 10, n2: -1, n3: -8, a: 1, b: 1 },\n  cross: { m: 8, n1: 1.3, n2: 0.01, n3: 8, a: 1, b: 1 },\n  diamond: { m: 4, n1: 1, n2: 1, n3: 1, a: 1, b: 1 },\n  drop: { m: 1, n1: 0.5, n2: 0.5, n3: 0.5, a: 1, b: 1 },\n  ellipse: { m: 4, n1: 2, n2: 2, n3: 2, a: 9, b: 6 },\n  gear: { m: 19, n1: 100, n2: 50, n3: 50, a: 1, b: 1 },\n  heart: { m: 1, n1: 0.8, n2: 1, n3: -8, a: 1, b: 0.18 },\n  heptagon: { m: 7, n1: 1000, n2: 400, n3: 400, a: 1, b: 1 },\n  octagon: { m: 8, n1: 1000, n2: 300, n3: 300, a: 1, b: 1 },\n  hexagon: { m: 6, n1: 1000, n2: 400, n3: 400, a: 1, b: 1 },\n  malteseCross: { m: 8, n1: 0.9, n2: 0.1, n3: 100, a: 1, b: 1 },\n  pentagon: { m: 5, n1: 1000, n2: 600, n3: 600, a: 1, b: 1 },\n  rectangle: { m: 4, n1: 100, n2: 100, n3: 100, a: 2, b: 1 },\n  roundedStar: { m: 5, n1: 2, n2: 7, n3: 7, a: 1, b: 1 },\n  square: { m: 4, n1: 100, n2: 100, n3: 100, a: 1, b: 1 },\n  star: { m: 6, n1: 90, n2: 100, n3: 100, a: 1, b: 1 },\n  triangle: { m: 3, n1: 100, n2: 200, n3: 200, a: 1, b: 1 },\n};\n\nexport { Superformula, SuperformulaTypes };\n","import * as d3 from 'd3';\nimport * as utils from './utils/utils';\nimport * as searchUtils from './utils/search-matching';\nimport { Link, Node, Hull } from './data-interfaces';\nimport Tooltip from './utils/tooltip';\nimport { DiagramStyles } from './diagram-styles';\n\nexport function load(\n  highlightedNodesChangedCallbackArg: (highlightedNodeNames: string[]) => void,\n  initialHighlightedNodeNames: string[],\n  initiallyShowOnlyHighlighted: boolean\n) {\n  highlightedNodesChangedCallback = highlightedNodesChangedCallbackArg;\n\n  prepare();\n\n  // Show a loading message\n  d3.select('#diagram')\n    .append('h3')\n    .classed('loading-info', true)\n    .html(\"Loading. This shouldn't take more than a few seconds...\");\n\n  // Load the data\n  const dataUrl: string = process.env.REACT_APP_DATA_SERVICES_URL!;\n  d3.json(dataUrl).then((response: { nodes?: Node[]; links?: Link[] }) => {\n    nodes = response.nodes!;\n    links = response.links!;\n\n    // Remove the loading message\n    d3.select('#diagram')\n      .select('.loading-info')\n      .remove();\n\n    // Start nodes in the middle\n    for (const d of nodes) {\n      d.x = diagramWidth / 2;\n      d.y = diagramHeight / 2;\n    }\n\n    // Show the data\n    updateSimulation();\n\n    // Highlight nodes\n    if (initialHighlightedNodeNames.length > 0) {\n      for (const highlightedNodeName of initialHighlightedNodeNames) {\n        // check if node is already selected\n        const nodeIdx = utils.findIndex(nodes, (hn: Node) => utils.strEquals(utils.getNodeNameAndGroup(hn), highlightedNodeName));\n        if (nodeIdx > -1) {\n          // highlight it\n          highlightedNodes.push(nodes[nodeIdx]);\n        } else {\n          // search for node next level down\n          for (const hn of nodes) {\n            if (hn.nodes) {\n              for (const cn of hn.nodes) {\n                if (utils.strEquals(utils.getNodeNameAndGroup(cn), highlightedNodeName)) {\n                  highlightedNodes.push(cn);\n                  ungroupNodes(hn);\n                }\n              }\n            }\n          }\n        }\n      }\n      showOnlyHighlighted(initiallyShowOnlyHighlighted);\n    }\n  });\n}\n\nexport function searchForNodes(searchText: string) {\n  if (searchText === '') {\n    highlightedNodes = [];\n    hasSearchedForNodes = false;\n  } else {\n    const matchedNodes = searchUtils.SearchNodes(searchText, nodeElements);\n    highlightedNodes = matchedNodes.data();\n    hasSearchedForNodes = true;\n  }\n  showOnlyHighlighted(diagramStyles.showOnlyHighlighted && highlightedNodes.length > 0);\n}\n\nexport function showAllLabels(show: boolean) {\n  diagramStyles.showAllLabels = show;\n  highlightNodes();\n}\n\nexport function showOnlyHighlighted(show: boolean) {\n  diagramStyles.showOnlyHighlighted = show;\n  highlightNodes();\n}\n\nexport function invertBackground(invert: boolean) {\n  diagramStyles.invertedBackground = invert;\n  highlightNodes();\n}\n\nexport function setHasForceSimulation(dropForce: boolean) {\n  hasForceSimulation = dropForce;\n  updateSimulation();\n}\n\nlet highlightedNodesChangedCallback: (highlightedNodeNames: string[]) => void;\n\nlet nodes: Node[];\nlet highlightedNodes: Node[] = [];\nlet links: Link[];\nlet biggestNodePerGroup: { [key: string]: Node };\n\nlet diagramWidth: number;\nlet diagramHeight: number;\nconst nodePadding = 1.5;\nconst clusterPadding = 6;\nconst rainbow = d3.interpolateRainbow;\n\nlet nodeElements: d3.Selection<SVGGElement, Node, d3.BaseType, any>;\nlet linkElements: d3.Selection<SVGLineElement, Link, d3.BaseType, any>;\nlet linkGradients: d3.Selection<SVGLinearGradientElement, Link, d3.BaseType, any>;\nlet hullElements: d3.Selection<SVGPathElement, Hull, d3.BaseType, any>;\n\nlet svg: d3.Selection<d3.BaseType, any, HTMLElement, any>;\nlet svgDefs: d3.Selection<d3.BaseType, any, HTMLElement, any>;\n\nlet hasSearchedForNodes: boolean = false;\nlet hasForceSimulation: boolean = true;\n\n// let tooltip: Tooltip; // Not currently used, but it works if needed\n\nconst diagramStyles = new DiagramStyles();\n\n// zooming\nlet zoom: d3.ZoomBehavior<Element, {}>;\nfunction zoomed() {\n  svg.select('.links').attr('transform', d3.event.transform);\n  svg.select('.nodes').attr('transform', d3.event.transform);\n  svg.select('.hulls').attr('transform', d3.event.transform);\n  const zoomFactor: any = d3.event.transform.k;\n  d3.selectAll('.node-text').style('font-size', 14 * (1 / zoomFactor) + 'px');\n}\n// Force Simulation\nlet simulation: d3.Simulation<Node, Link> = d3.forceSimulation<Node, Link>();\n\nfunction prepare() {\n  diagramWidth = Math.floor(Number(window.getComputedStyle(document.getElementById('diagram')!).width!.replace('px', ''))) - 10;\n  diagramHeight = Math.floor(Number(window.getComputedStyle(document.getElementById('diagram')!).height!.replace('px', ''))) - 10;\n\n  svg = d3\n    .select('#diagram')\n    .append('svg')\n    .classed('graph-svg-diagram', true)\n    .attr('width', diagramWidth)\n    .attr('height', diagramHeight)\n    .on('click', onBackgroundDiagramClick) as any;\n\n  svgDefs = svg.append('defs') as any;\n\n  svg\n    .append('g') // first so it's not on top\n    .classed('hulls', true);\n\n  svg.append('g').classed('links', true);\n\n  svg\n    .append('g') // last so it's on top\n    .classed('nodes', true);\n\n  // tooltip = new Tooltip(d3.select('#diagram'));\n\n  // zooming\n  zoom = d3\n    .zoom()\n    .scaleExtent([0, 40])\n    .translateExtent([[0 - diagramWidth, 0 - diagramHeight], [diagramWidth * 2, diagramHeight * 2]])\n    .on('zoom', zoomed);\n\n  svg.call(zoom as any).on('dblclick.zoom', null); // disable double-click zoom\n\n  // Force Simulation\n  simulation = d3\n    .forceSimulation<Node, Link>()\n    .force(\n      'link',\n      d3\n        .forceLink()\n        .id((d: Node) => utils.getNodeNameOrGroup(d))\n        .distance((slDatum: d3.SimulationLinkDatum<{}>) => {\n          const l = slDatum as Link;\n          const n1 = l.source;\n          const n2 = l.target;\n          let d: number = utils.nodeRadiusSizes.default;\n          if (utils.isNodeNotString(n1) && utils.isNodeNotString(n2)) {\n            const combinedRadiuses: number = utils.getRadius(n1) + utils.getRadius(n2);\n            d = utils.doGroupsMatch(n1, n2) ? combinedRadiuses : combinedRadiuses * 7;\n          }\n          return d;\n        })\n        .strength((slDatum: d3.SimulationLinkDatum<{}>) => {\n          const l = slDatum as Link;\n          let s: number = 0.3;\n          if (typeof l.source !== 'string' && typeof l.target !== 'string') {\n            s = utils.doGroupsMatch(l.source, l.target) ? 0.01 : 0.5;\n          }\n          return s;\n        })\n    )\n    .force('collide', d3.forceCollide().radius((d: Node) => utils.getRadius(d) + 20))\n    .force(\n      'charge',\n      d3\n        .forceManyBody()\n        .strength(-500)\n        .distanceMin(100)\n    )\n    .force('x', d3.forceX(diagramWidth / 2))\n    .force('y', d3.forceY(diagramHeight / 2));\n}\n\nfunction tickHulls() {\n  hullElements.data(utils.convexHulls(nodes)).attr('d', utils.drawCluster);\n}\n\nfunction tickLinks() {\n  linkElements\n    .attr('x1', (d: Link) => {\n      return utils.isNodeNotString(d.source) && d.source.x ? d.source.x : 0;\n    })\n    .attr('y1', (d: Link) => {\n      return utils.isNodeNotString(d.source) && d.source.y ? d.source.y : 0;\n    })\n    .attr('x2', (d: Link) => {\n      return utils.isNodeNotString(d.target) && d.target.x ? d.target.x : 0;\n    })\n    .attr('y2', (d: Link) => {\n      return utils.isNodeNotString(d.target) && d.target.y ? d.target.y : 0;\n    });\n  linkGradients\n    .attr('x1', (d: Link) => {\n      return utils.isNodeNotString(d.source) && d.source.x ? d.source.x : 0;\n    })\n    .attr('y1', (d: Link) => {\n      return utils.isNodeNotString(d.source) && d.source.y ? d.source.y : 0;\n    })\n    .attr('x2', (d: Link) => {\n      return utils.isNodeNotString(d.target) && d.target.x ? d.target.x : 0;\n    })\n    .attr('y2', (d: Link) => {\n      return utils.isNodeNotString(d.target) && d.target.y ? d.target.y : 0;\n    });\n}\n\nfunction updateSimulation() {\n  linkElements = svg\n    .select('.links')\n    .selectAll('line')\n    .data(links, utils.getLinkGradientId as any) as any;\n  linkGradients = svgDefs.selectAll('linearGradient').data(links, utils.getLinkGradientId as any) as any;\n\n  nodeElements = svg\n    .select('.nodes')\n    .selectAll('.node')\n    .data(nodes, utils.getNodeId) as any;\n\n  hullElements = svg\n    .select('.hulls')\n    .selectAll('path.hull')\n    .data(utils.convexHulls(nodes)) as any;\n\n  linkGradients.exit().remove();\n  const linkGradientsEnter = linkGradients.enter().append('linearGradient');\n  linkGradientsEnter.append('stop');\n  linkGradientsEnter.append('stop');\n  diagramStyles.applyLinkGradientDefault(linkGradientsEnter);\n  linkGradients = linkGradientsEnter.merge(linkGradients);\n\n  linkElements\n    .exit()\n    .transition(utils.transitionLinear(100))\n    .style('stroke-opacity', 1e-6)\n    .remove();\n  const linkEnterElements = linkElements.enter().append('line');\n  linkEnterElements\n    .on('mouseover', function(d, i) {\n      // note function (not lambda) is reqd for 'this'\n      diagramStyles.applyLinkMouseOver(d3.select(this));\n      // tooltip.Show(d3.select(this), 'a message');\n    })\n    .on('mouseout', function(d, i) {\n      diagramStyles.applyLinkMouseOut(d3.select(this));\n      // tooltip.Hide();\n    })\n    .on('click', PopulateInfoBox)\n    .style('stroke-opacity', 1e-6);\n  diagramStyles.applyLinkDefault(linkEnterElements);\n  linkElements = linkEnterElements.merge(linkElements);\n\n  nodeElements\n    .exit()\n    .transition(utils.transitionLinear(100))\n    .style('stroke-opacity', 1e-6)\n    .style('fill-opacity', 1e-6)\n    .remove();\n  const drager: d3.DragBehavior<any, any, any> = d3.drag();\n  drager.on('drag', dragged).on('end', dragended);\n  const nodeEnterElements = nodeElements\n    .enter()\n    .append('g')\n    .classed('node', true);\n  nodeEnterElements\n    .on('mouseover', function(d, i) {\n      // function (not lambda) is reqd for 'this'\n      diagramStyles.applyNodeMouseOver(d3.select(this));\n    })\n    .on('mouseout', function(d, i) {\n      diagramStyles.applyNodeMouseOut(d3.select(this));\n    })\n    .on('click', onNodeClick)\n    .on('dblclick', onNodeDblclick)\n    .call(drager);\n  nodeEnterElements.append('path').classed('node-shape', true);\n  nodeEnterElements.append('text').classed('node-text', true);\n  diagramStyles.applyNodeDefault(nodeEnterElements);\n  nodeElements = nodeEnterElements.merge(nodeElements);\n\n  hullElements\n    .exit()\n    .transition(utils.transitionLinear(100))\n    .style('fill-opacity', 1e-6)\n    .remove();\n  const hullEnterElements = hullElements\n    .enter()\n    .append('path')\n    .classed('hull', true)\n    .style('fill-opacity', 1e-6);\n  diagramStyles.applyHullDefault(hullEnterElements);\n  hullElements = hullEnterElements.merge(hullElements);\n\n  biggestNodePerGroup = utils.getBiggestNodesPerGroup(nodes, links);\n\n  simulation.nodes(nodes).on('tick', () => {\n    const alpha = simulation.alpha();\n\n    // Force the node groups to cluster\n    for (const d of nodes) {\n      if (d.group) {\n        const biggestNode = biggestNodePerGroup[utils.strToLowerOrEmpty(d.group)];\n        if (biggestNode !== d) {\n          biggestNode.x = biggestNode.x || 0;\n          biggestNode.y = biggestNode.y || 0;\n          d.x = d.x || 0;\n          d.y = d.y || 0;\n          const x1 = d.x - biggestNode.x;\n          const y1 = d.y - biggestNode.y;\n          const l = Math.sqrt(x1 * x1 + y1 * y1); // dist between node and biggest node\n          const r = utils.getRadius(d) * 2 + utils.getRadius(biggestNode); // ideal dist between node and biggest node\n          if (l !== r) {\n            // as decay falls from 1 to 0, set a mostly consistant multiplier with small peak\n            const alphaMultiplier = -0.9 * Math.pow(alpha - 1, 2) - 0.9 * (alpha - 1) + 0.7;\n            const l1 = l - r;\n            const t = l1 / l;\n            const xr = (1 - t) * biggestNode.x + t * d.x;\n            const yr = (1 - t) * biggestNode.y + t * d.y;\n            const xd = d.x - xr;\n            const yd = d.y - yr;\n            d.x = (d.x || 0) - xd * 0.49 * alphaMultiplier;\n            d.y = (d.y || 0) - yd * 0.49 * alphaMultiplier;\n            const bxr = (1 - t) * d.x + t * biggestNode.x;\n            const byr = (1 - t) * d.y + t * biggestNode.y;\n            const bxd = biggestNode.x - bxr;\n            const byd = biggestNode.y - byr;\n            biggestNode.x -= bxd * 0.49 * alphaMultiplier;\n            biggestNode.y -= byd * 0.49 * alphaMultiplier;\n          }\n        }\n      }\n    }\n\n    tickHulls();\n\n    tickLinks();\n\n    nodeElements.attr('transform', (d: Node) => {\n      d.x = isNaN(d.x!) || d.x === 0 ? diagramWidth / 2 : d.x!;\n      d.y = isNaN(d.y!) || d.y === 0 ? diagramHeight / 2 : d.y!;\n      return 'translate(' + d.x + ',' + d.y + ')';\n    });\n  });\n  simulation.force<d3.ForceLink<Node, Link>>('link')!.links(links);\n  utils.setSimulationAlpha(simulation);\n  if (hasForceSimulation) {\n    simulation.restart();\n  } else {\n    simulation.stop();\n  }\n}\n\nlet dragSimulationRestarted = false;\n\nfunction dragged(d: Node, idx: any, n: any) {\n  if (hasForceSimulation) {\n    if (!dragSimulationRestarted) {\n      simulation.alphaTarget(0.02).restart();\n      dragSimulationRestarted = true;\n    }\n    d.fx = d3.event.x;\n    d.fy = d3.event.y;\n  } else {\n    d.x = d3.event.x;\n    d.y = d3.event.y;\n    d3.select(n[idx]).attr('transform', 'translate(' + d.x + ',' + d.y + ')');\n    tickHulls();\n    tickLinks();\n  }\n}\n\nfunction dragended(d: Node) {\n  if (hasForceSimulation) {\n    if (!d3.event.active && dragSimulationRestarted) {\n      dragSimulationRestarted = false;\n      simulation.alphaTarget(0);\n    }\n    d.fx = null;\n    d.fy = null;\n  }\n}\n\nfunction onBackgroundDiagramClick() {\n  // Clear any highlighted nodes\n  highlightedNodes = [];\n  hasSearchedForNodes = false;\n  showOnlyHighlighted(false);\n}\n\nfunction onNodeClick(d: Node) {\n  hasSearchedForNodes = false;\n\n  // check if node is already selected\n  const highlightedNodeIdx = utils.findIndex(highlightedNodes, (hn: Node) =>\n    utils.strEquals(utils.getNodeNameAndGroup(hn), utils.getNodeNameAndGroup(d))\n  );\n  if (highlightedNodeIdx > -1) {\n    // then remove node\n    highlightedNodes.splice(highlightedNodeIdx, 1);\n  } else {\n    // highlight it\n    highlightedNodes.push(d);\n    PopulateInfoBox(d);\n  }\n  showOnlyHighlighted(diagramStyles.showOnlyHighlighted && highlightedNodes.length > 0);\n  d3.event.stopPropagation();\n}\n\nfunction onNodeDblclick(d: Node) {\n  if (d.nodes) {\n    // A grouped node\n    ungroupNodes(d);\n  } else if (d.name && d.group) {\n    // a single node\n    regroupNodes(d);\n  }\n\n  // Clear any highlighted nodes (animation time causes issues if it's before the grouping)\n  hasSearchedForNodes = false;\n  highlightNodes();\n\n  d3.event.stopPropagation();\n}\n\nfunction ungroupNodes(d: Node) {\n  // Set nodes to the coords of the parent (with random amount)\n  for (const k1 of d.nodes!) {\n    k1.x = d.x! + (1 + Math.random()) * (utils.getRadius(d) * 1.3 + utils.getRadius(k1)) * (Math.random() < 0.5 ? -1 : 1);\n    k1.y = d.y! + (1 + Math.random()) * (utils.getRadius(d) * 1.3 + utils.getRadius(k1)) * (Math.random() < 0.5 ? -1 : 1);\n  }\n  // Remove grouped node and bring child nodes up to main array\n  for (const k2 of nodes) {\n    if (k2.group && k2.nodes && utils.doGroupsMatch(k2, d)) {\n      nodes.splice(nodes.indexOf(k2), 1);\n      break;\n    }\n  }\n  Array.prototype.push.apply(nodes, d.nodes as any);\n  // Add internal links\n  if (d.internalLinks) {\n    for (const k3Link of d.internalLinks) {\n      k3Link.target = k3Link.targetChild!;\n      k3Link.source = k3Link.sourceChild!;\n    }\n    Array.prototype.push.apply(links, d.internalLinks);\n    delete d.internalLinks;\n  }\n  // Update links\n  for (const childMNode of d.nodes!) {\n    for (const lLink of links) {\n      if (\n        lLink.targetChild &&\n        (utils.strEquals(lLink.targetChild, childMNode.name) ||\n          (utils.isNodeNotString(lLink.targetChild) && utils.strEquals(lLink.targetChild.name, childMNode.name)))\n      ) {\n        lLink.target = lLink.targetChild;\n        delete lLink.targetChild;\n      }\n      if (\n        lLink.sourceChild &&\n        (utils.strEquals(lLink.sourceChild, childMNode.name) ||\n          (utils.isNodeNotString(lLink.sourceChild) && utils.strEquals(lLink.sourceChild.name, childMNode.name)))\n      ) {\n        lLink.source = lLink.sourceChild;\n        delete lLink.sourceChild;\n      }\n    }\n  }\n\n  updateSimulation();\n\n  // check if node is highlighted and remove\n  const highlightedNodeIdx = utils.findIndex(highlightedNodes, (hn: Node) =>\n    utils.strEquals(utils.getNodeNameAndGroup(hn), utils.getNodeNameAndGroup(d))\n  );\n  if (highlightedNodeIdx > -1) {\n    // then remove node\n    highlightedNodes.splice(highlightedNodeIdx, 1);\n  }\n}\n\nfunction regroupNodes(d: Node) {\n  const newNodeGroup: Node = { group: d.group, nodes: [], x: d.x, y: d.y, internalLinks: [] };\n  for (let k = 0; k < nodes.length; ++k) {\n    const kNode = nodes[k];\n    if (utils.doGroupsMatch(kNode, d)) {\n      // Group child nodes and remove from main array\n      nodes.splice(k, 1);\n      newNodeGroup.nodes!.push(kNode);\n      // Update links\n      for (const mLink of links) {\n        if (\n          (utils.strEquals(mLink.target, kNode.name) || (utils.isNodeNotString(mLink.target) && utils.strEquals(mLink.target.name, kNode.name))) &&\n          (!mLink.targetChild || (utils.isNodeNotString(mLink.targetChild) ? !utils.strEquals(mLink.targetChild.group, kNode.name) : true))\n        ) {\n          mLink.targetChild = mLink.target;\n          mLink.target = d.group || '';\n        }\n        if (\n          (utils.strEquals(mLink.source, kNode.name) || (utils.isNodeNotString(mLink.source) && utils.strEquals(mLink.source.name, kNode.name))) &&\n          (!mLink.sourceChild || (utils.isNodeNotString(mLink.sourceChild) ? !utils.strEquals(mLink.sourceChild.group, kNode.name) : true))\n        ) {\n          mLink.sourceChild = mLink.source;\n          mLink.source = d.group || '';\n        }\n      }\n      k--;\n\n      // check if node is highlighted and remove\n      const highlightedNodeIdx = utils.findIndex(highlightedNodes, (hn: Node) =>\n        utils.strEquals(utils.getNodeNameAndGroup(hn), utils.getNodeNameAndGroup(kNode))\n      );\n      if (highlightedNodeIdx > -1) {\n        // then remove node\n        highlightedNodes.splice(highlightedNodeIdx, 1);\n      }\n    }\n  }\n  // Pass through links again and get rid of internal links\n  for (let m1 = 0; m1 < links.length; m1++) {\n    const m1Link = links[m1];\n    if (utils.strEquals(m1Link.target, d.group) && utils.strEquals(m1Link.target, m1Link.source)) {\n      newNodeGroup.internalLinks!.push(m1Link);\n      links.splice(m1, 1);\n      m1--;\n    }\n  }\n  nodes.push(newNodeGroup);\n\n  updateSimulation();\n}\n\nfunction highlightNodes() {\n  highlightedNodesChangedCallback(highlightedNodes.map(n => utils.getNodeNameAndGroup(n)));\n  if (highlightedNodes.length === 0) {\n    diagramStyles.applyNodeDefault(nodeElements);\n    diagramStyles.applyLinkDefault(linkElements);\n    diagramStyles.applyLinkGradientDefault(linkGradients);\n    diagramStyles.applyHullDefault(hullElements);\n  } else {\n    const matchedNodesData = highlightedNodes;\n    const matchedNodes = searchUtils.GetMatchedNodes(matchedNodesData, nodeElements);\n    const matchedLinks = searchUtils.GetMatchedLinks(matchedNodesData, linkElements, diagramStyles.showOnlyHighlighted);\n    const matchedLinkGradients = searchUtils.GetMatchedLinkGradients(matchedNodesData, linkGradients, diagramStyles.showOnlyHighlighted);\n    const unmatchedLinks = searchUtils.GetUnmatchedLinks(matchedNodesData, linkElements, diagramStyles.showOnlyHighlighted);\n    const unmatchedLinkGradients = searchUtils.GetUnmatchedLinkGradients(matchedNodesData, linkGradients, diagramStyles.showOnlyHighlighted);\n    const neighbourNodes = searchUtils.GetNeighbourNodes(matchedNodesData, matchedLinks.data(), nodeElements);\n    const highlightedAndNeighbourNodesData = matchedNodesData.concat(neighbourNodes.data());\n    const unmatchedNodes = searchUtils.GetUnmatchedNodes(highlightedAndNeighbourNodesData, nodeElements);\n    const matchedHulls = searchUtils.GetMatchedHulls(matchedNodesData, hullElements);\n    const unmatchedHulls = searchUtils.GetUnmatchedHulls(matchedHulls.data(), hullElements);\n\n    if (hasSearchedForNodes === true) {\n      diagramStyles.applyNodeSearch(matchedNodes);\n    } else {\n      diagramStyles.applyNodeHighlight(matchedNodes);\n    }\n\n    diagramStyles.applyNodeHighlightedNeighbour(neighbourNodes);\n    diagramStyles.applyNodeUnhighlighted(unmatchedNodes);\n    diagramStyles.applyLinkHighlight(matchedLinks);\n    diagramStyles.applyLinkUnhighlighted(unmatchedLinks);\n    diagramStyles.applyLinkGradientHighlight(matchedLinkGradients);\n    diagramStyles.applyLinkGradientUnhighlighted(unmatchedLinkGradients);\n    diagramStyles.applyHullHighlight(matchedHulls);\n    diagramStyles.applyHullUnhighlighted(unmatchedHulls);\n  }\n}\n\n// Info Box\nfunction PopulateInfoBox(nodeOrLink: Node | Link) {\n  const divServiceDetails = d3.select('#info-box');\n  const title = utils.getNodeOrLinkTitle(nodeOrLink);\n  const notes = !utils.isLinkNotNode(nodeOrLink) ? nodeOrLink.notes || '' : '';\n  divServiceDetails.select('.title').text(title);\n  divServiceDetails.select('.notes').text(notes);\n\n  const tableElement = divServiceDetails.select('.table');\n  divServiceDetails\n    .select('.table')\n    .selectAll('tr')\n    .remove();\n\n  const timestamp = nodeOrLink.timestamp || '';\n  divServiceDetails.select('.timestamp').text(timestamp);\n\n  if (nodeOrLink.details) {\n    // node or link\n    const tableData = d3.entries(nodeOrLink.details);\n    tableElement\n      .selectAll('tr')\n      .data(tableData)\n      .enter()\n      .append('tr')\n      .selectAll('tr')\n      .data((row: { key: string; value: any }) => d3.values(row))\n      .enter()\n      .append('td')\n      .text((d: string) => d);\n  } else if (!utils.isLinkNotNode(nodeOrLink) && nodeOrLink.group && nodeOrLink.nodes) {\n    // group\n    tableElement\n      .selectAll('tr')\n      .data(nodeOrLink.nodes)\n      .enter()\n      .append('tr')\n      .selectAll('td')\n      .data((row: Node) => [row.name!])\n      .enter()\n      .append('td')\n      .text((d: string) => d);\n  }\n  if (d3.event) {\n    d3.event.stopPropagation();\n  }\n}\n","import * as d3 from 'd3';\nimport { schemeDark2 } from 'd3-scale-chromatic';\n\nexport const colorScale = d3.scaleOrdinal(schemeDark2.slice());\nexport const defaultNodeStrokeWidth = 1.5;\nexport const defaultLinkStrokeWidth = 1.5;\nexport const highlightColor = '#32f272';\nexport const everythingElseColor = '#31d8ea';\nexport const everythingElseOpacity = 0.2;\nexport const linkGradientColorStart = '#006eff';\nexport const linkGradientColorEnd = '#87eeff';\nexport const linkGradientColorEndInverted = '#2f5359';\n","import * as d3 from 'd3';\nimport * as utils from './utils/utils';\nimport { Superformula, SuperformulaTypes } from './utils/superformula';\nimport * as constants from './constants';\nimport { Link, Node, Hull, NodeStateProperties } from './data-interfaces';\nimport { BaseType } from 'd3';\n\nconst durationSecond: number = 1000;\nconst durationLong: number = 400;\nconst durationMediumLong: number = 250;\nconst durationMedium: number = 200;\nconst durationShort: number = 100;\n\nconst defaultSupaDupaPath = new Superformula()\n  .type(utils.defaultNodeSuperformulaType)\n  .size(utils.defaultNodeSuperformulaSize)\n  .segments(360);\n\nconst nodeStateDefault: NodeStateProperties = {\n  className: 'node-state-default',\n  nodeTextShiftMultiplier: 1.5,\n  shapeSuperformula: defaultSupaDupaPath,\n};\nconst nodeStateHighlight: NodeStateProperties = {\n  className: 'node-state-highlight',\n  nodeTextShiftMultiplier: 1.8,\n  shapeSuperformula: new Superformula().type(utils.defaultNodeSuperformulaType).size(d => {\n    return 1.5 * utils.getHighlightedRadius(d);\n  }),\n};\nconst nodeStateSearch: NodeStateProperties = {\n  className: 'node-state-search',\n  nodeTextShiftMultiplier: 1.8,\n  shapeSuperformula: new Superformula()\n    .type(() => 'gear')\n    .size(d => {\n      return 2 * utils.getHighlightedRadius(d);\n    }),\n};\nconst nodeStateHighlightNeighbour: NodeStateProperties = {\n  className: 'node-state-highlight-neighbour',\n  nodeTextShiftMultiplier: 1.8,\n  shapeSuperformula: defaultSupaDupaPath,\n};\nconst nodeStateUnhighlighted: NodeStateProperties = {\n  className: 'node-state-unhighlighted',\n  nodeTextShiftMultiplier: 1.6,\n  shapeSuperformula: defaultSupaDupaPath,\n};\n\nexport class DiagramStyles {\n  public showOnlyHighlighted: boolean = false;\n  public invertedBackground: boolean = false;\n  public showAllLabels: boolean = false;\n  private mouseOverLock: any = {};\n  private mouseOutLock: any = {};\n\n  public applyNodeDefault(nodeEles: d3.Selection<SVGGElement, Node, d3.BaseType, any>) {\n    clearStates(nodeEles);\n    nodeEles.classed(nodeStateDefault.className, true);\n    const nodeShape = nodeEles.selectAll('.node-shape');\n    const nodeText = nodeEles.selectAll('.node-text');\n    nodeShape\n      .transition(utils.transitionLinear(durationSecond))\n      .attr('d', (d: Node) => nodeStateDefault.shapeSuperformula.getPath(d))\n      .attr('stroke-width', (d: Node) => 1)\n      .attr('stroke', (d: Node) => constants.colorScale(utils.strToLowerOrEmpty(d.group)))\n      .attr('fill', (d: Node) => constants.colorScale(utils.strToLowerOrEmpty(d.group)))\n      .style('stroke-opacity', 1)\n      .style('fill-opacity', 1);\n    nodeText\n      .style('opacity', (d: Node) => utils.nodeTextOpacity(d, this.showAllLabels))\n      .attr('text-anchor', 'right')\n      .attr('dominant-baseline', 'central')\n      .attr('transform', (d: Node) => utils.nodeTextShiftRight(d))\n      .text((d: Node) => d.name || d.group || '');\n  }\n\n  public applyNodeSearch(nodeEles: d3.Selection<SVGGElement, Node, d3.BaseType, any>) {\n    clearStates(nodeEles);\n    nodeEles.classed(nodeStateSearch.className, true);\n    const nodeShape = nodeEles.selectAll('.node-shape');\n    const nodeText = nodeEles.selectAll('.node-text');\n    const bigSuperdupaPath = new Superformula().type(() => 'gear');\n    nodeShape\n      .transition()\n      .duration(durationMediumLong)\n      .attr('d', (d: Node) =>\n        bigSuperdupaPath\n          .size(bd => {\n            return 5 * utils.getHighlightedRadius(bd);\n          })\n          .getPath(d)\n      )\n      .attr('stroke', (d: Node) => constants.highlightColor)\n      .attr('fill', (d: Node) => constants.highlightColor)\n      .style('stroke-opacity', 1)\n      .style('fill-opacity', 1)\n      .transition()\n      .duration(durationMedium)\n      .attr('d', (d: Node) => nodeStateSearch.shapeSuperformula.getPath(d));\n    nodeText\n      .transition()\n      .duration(durationLong)\n      .style('opacity', 1)\n      .attr('transform', (d: Node) => {\n        return utils.nodeTextShiftRight(d, nodeStateSearch.nodeTextShiftMultiplier);\n      });\n  }\n\n  public applyNodeHighlight(nodeEles: d3.Selection<SVGGElement, Node, d3.BaseType, any>) {\n    clearStates(nodeEles);\n    nodeEles.classed(nodeStateHighlight.className, true);\n    const nodeShape = nodeEles.selectAll('.node-shape');\n    const nodeText = nodeEles.selectAll('.node-text');\n    nodeShape\n      .transition()\n      .duration(durationMedium)\n      .attr('d', (d: Node) => nodeStateHighlight.shapeSuperformula.getPath(d))\n      .attr('stroke', (d: Node) => utils.darkenIfInvertedBackground(constants.highlightColor, this.invertedBackground))\n      .attr('fill', (d: Node) => utils.darkenIfInvertedBackground(constants.highlightColor, this.invertedBackground))\n      .style('stroke-opacity', 1)\n      .style('fill-opacity', 1);\n    nodeText\n      .transition()\n      .duration(durationLong)\n      .style('opacity', 1)\n      .attr('transform', (d: Node) => {\n        return utils.nodeTextShiftRight(d, nodeStateHighlight.nodeTextShiftMultiplier);\n      });\n  }\n\n  public applyNodeHighlightedNeighbour(nodeEles: d3.Selection<SVGGElement, Node, d3.BaseType, any>) {\n    clearStates(nodeEles);\n    nodeEles.classed(nodeStateHighlightNeighbour.className, true);\n    const nodeShape = nodeEles.selectAll('.node-shape');\n    const nodeText = nodeEles.selectAll('.node-text');\n    nodeShape\n      .transition()\n      .duration(durationLong)\n      .attr('d', (d: Node) => nodeStateHighlightNeighbour.shapeSuperformula.getPath(d))\n      .attr('stroke', (d: Node) => utils.darkenIfInvertedBackground(constants.everythingElseColor, this.invertedBackground))\n      .attr('fill', (d: Node) => utils.darkenIfInvertedBackground(constants.everythingElseColor, this.invertedBackground))\n      .style('stroke-opacity', 1)\n      .style('fill-opacity', 1);\n    nodeText\n      .transition()\n      .duration(durationLong)\n      .style('opacity', 1);\n  }\n\n  public applyNodeUnhighlighted(nodeEles: d3.Selection<SVGGElement, Node, d3.BaseType, any>) {\n    clearStates(nodeEles);\n    nodeEles.classed(nodeStateUnhighlighted.className, true);\n    const nodeShape = nodeEles.selectAll('.node-shape');\n    const nodeText = nodeEles.selectAll('.node-text');\n    nodeShape\n      .transition()\n      .duration(durationLong)\n      .attr('d', (d: Node) => nodeStateUnhighlighted.shapeSuperformula.getPath(d))\n      .attr('stroke', (d: Node) => utils.darkenIfInvertedBackground(constants.everythingElseColor, this.invertedBackground))\n      .attr('fill', (d: Node) => utils.darkenIfInvertedBackground(constants.everythingElseColor, this.invertedBackground))\n      .style('stroke-opacity', this.showOnlyHighlighted ? 0 : constants.everythingElseOpacity)\n      .style('fill-opacity', this.showOnlyHighlighted ? 0 : constants.everythingElseOpacity);\n    nodeText\n      .transition()\n      .duration(durationLong)\n      .style('opacity', (d: Node) => (this.showOnlyHighlighted ? 0 : this.showAllLabels ? 1 : 0))\n      .attr('transform', d => {\n        return utils.nodeTextShiftRight(d as Node);\n      });\n  }\n\n  public applyNodeMouseOver(nodeEles: d3.Selection<SVGGElement, Node, d3.BaseType, any>) {\n    const nodeState = getNodeStateProperties(nodeEles);\n    const nodeShape = nodeEles.selectAll('.node-shape');\n    const nodeText = nodeEles.selectAll('.node-text');\n    // A transition can already occur on a node, therefore using a custom tween\n    const mouseOverTransition = d3\n      .select(this.mouseOverLock)\n      .transition()\n      .duration(durationShort);\n    mouseOverTransition.tween('style:stroke-width', () => {\n      const i = d3.interpolateNumber(1, 10);\n      return (t: any) => {\n        nodeShape.style('stroke-width', i(t));\n      };\n    });\n    mouseOverTransition.tween('attr:transform', () => {\n      const nodeData = nodeEles.data()[0];\n      const shiftFrom = utils.nodeTextShiftRight(nodeData, nodeState.nodeTextShiftMultiplier);\n      const shiftTo = utils.nodeTextShiftRight(nodeData, nodeState.nodeTextShiftMultiplier * 1.3);\n      const i = d3.interpolateString(shiftFrom, shiftTo);\n      return (t: any) => {\n        nodeText.attr('transform', i(t));\n      };\n    });\n    if (this.showOnlyHighlighted === false && Number(nodeText.style('opacity')) < 1) {\n      nodeText.classed('temp-show', true);\n      mouseOverTransition.tween('style:opacity', () => {\n        const i = d3.interpolateNumber(Number(nodeText.style('opacity')), 1);\n        return (t: any) => {\n          nodeText.style('opacity', i(t));\n        };\n      });\n    }\n  }\n\n  public applyNodeMouseOut(nodeEles: d3.Selection<SVGGElement, Node, d3.BaseType, any>) {\n    const nodeState = getNodeStateProperties(nodeEles);\n    const nodeShape = nodeEles.selectAll('.node-shape');\n    const nodeText = nodeEles.selectAll('.node-text');\n    // A transition can already occur on a node, therefore using a custom tween\n    const mouseOutTransition = d3\n      .select(this.mouseOutLock)\n      .transition()\n      .duration(durationShort);\n    mouseOutTransition.tween('style:stroke-width', () => {\n      const i = d3.interpolateNumber(10, 1);\n      return (t: any) => {\n        nodeShape.style('stroke-width', i(t));\n      };\n    });\n    mouseOutTransition.tween('attr:transform', () => {\n      const nodeData = nodeEles.data()[0];\n      const shiftTo = utils.nodeTextShiftRight(nodeData, nodeState.nodeTextShiftMultiplier);\n      const shiftFrom = utils.nodeTextShiftRight(nodeData, nodeState.nodeTextShiftMultiplier * 1.3);\n      const i = d3.interpolateString(shiftFrom, shiftTo);\n      return (t: any) => {\n        nodeText.attr('transform', i(t));\n      };\n    });\n    if (nodeText.classed('temp-show')) {\n      nodeText.classed('temp-show', false);\n      if (nodeState.className !== nodeStateHighlight.className) {\n        mouseOutTransition.tween('style:opacity', () => {\n          const i = d3.interpolateNumber(1, 0);\n          return (t: any) => {\n            nodeText.style('opacity', i(t));\n          };\n        });\n      }\n    }\n  }\n\n  public applyLinkDefault(linkEles: d3.Selection<SVGLineElement, Link, d3.BaseType, any>) {\n    linkEles\n      .attr('stroke-width', constants.defaultLinkStrokeWidth)\n      .attr('stroke', d => {\n        return 'url(#' + utils.getLinkGradientId(d) + ')';\n      })\n      .transition(utils.transitionLinear(durationSecond))\n      .style('stroke-opacity', 1);\n  }\n\n  public applyLinkHighlight(linkEles: d3.Selection<SVGLineElement, Link, d3.BaseType, any>) {\n    linkEles\n      .transition()\n      .duration(durationLong)\n      .style('stroke-opacity', 1);\n  }\n\n  public applyLinkMouseOver(linkEles: d3.Selection<SVGLineElement, Link, d3.BaseType, any>) {\n    linkEles.attr('stroke-width', constants.defaultLinkStrokeWidth * 3);\n  }\n\n  public applyLinkMouseOut(linkEles: d3.Selection<SVGLineElement, Link, d3.BaseType, any>) {\n    linkEles.attr('stroke-width', constants.defaultLinkStrokeWidth);\n  }\n\n  public applyLinkUnhighlighted(linkEles: d3.Selection<SVGLineElement, Link, d3.BaseType, any>) {\n    linkEles\n      .transition()\n      .duration(durationLong)\n      .style('stroke-opacity', this.showOnlyHighlighted ? 0 : constants.everythingElseOpacity);\n  }\n\n  public applyLinkGradientDefault(linkGradientEles: d3.Selection<SVGLinearGradientElement, Link, d3.BaseType, any>) {\n    const stopOne = linkGradientEles.selectAll('stop:nth-child(1)');\n    const stopTwo = linkGradientEles.selectAll('stop:nth-child(2)');\n    linkGradientEles.attr('id', utils.getLinkGradientId).attr('gradientUnits', 'userSpaceOnUse');\n    stopOne.attr('offset', '0%').attr('stop-color', constants.linkGradientColorStart);\n    stopTwo\n      .attr('offset', '100%')\n      .attr('stop-color', this.invertedBackground ? constants.linkGradientColorEndInverted : constants.linkGradientColorEnd);\n  }\n\n  public applyLinkGradientHighlight(linkGradientEles: d3.Selection<SVGLinearGradientElement, Link, d3.BaseType, any>) {\n    linkGradientEles\n      .selectAll('stop:nth-child(2)')\n      .transition()\n      .duration(durationLong)\n      .attr('stop-color', this.invertedBackground ? constants.linkGradientColorEndInverted : constants.linkGradientColorEnd);\n  }\n\n  public applyLinkGradientUnhighlighted(linkGradientEles: d3.Selection<SVGLinearGradientElement, Link, d3.BaseType, any>) {\n    linkGradientEles\n      .selectAll('stop:nth-child(2)')\n      .transition()\n      .duration(durationLong)\n      .attr('stop-color', this.invertedBackground ? constants.linkGradientColorEndInverted : constants.linkGradientColorEnd);\n  }\n\n  public applyHullDefault(hullEles: d3.Selection<SVGPathElement, Hull, BaseType, any>) {\n    hullEles\n      .attr('d', utils.drawCluster)\n      .transition()\n      .duration(durationLong)\n      .style('fill', (d: Node) => constants.colorScale(d.group || ''))\n      .style('fill-opacity', 0.3);\n  }\n\n  public applyHullHighlight(hullEles: d3.Selection<SVGPathElement, Hull, BaseType, any>) {\n    hullEles\n      .transition()\n      .duration(durationLong)\n      .style('fill', constants.highlightColor)\n      .style('fill-opacity', this.showOnlyHighlighted ? 0 : 0.2);\n  }\n\n  public applyHullUnhighlighted(hullEles: d3.Selection<SVGPathElement, Hull, BaseType, any>) {\n    hullEles\n      .transition()\n      .duration(durationLong)\n      .style('fill', constants.everythingElseColor)\n      .style('fill-opacity', this.showOnlyHighlighted ? 0 : 0.08);\n  }\n}\n\nfunction clearStates(nodeEles: d3.Selection<SVGGElement, Node, d3.BaseType, any>) {\n  nodeEles.classed(nodeStateDefault.className, false);\n  nodeEles.classed(nodeStateHighlight.className, false);\n  nodeEles.classed(nodeStateSearch.className, false);\n  nodeEles.classed(nodeStateHighlightNeighbour.className, false);\n  nodeEles.classed(nodeStateUnhighlighted.className, false);\n}\n\nfunction getNodeStateProperties(nodeEles: d3.Selection<SVGGElement, Node, d3.BaseType, any>): NodeStateProperties {\n  if (nodeEles.classed(nodeStateDefault.className)) {\n    return nodeStateDefault;\n  } else if (nodeEles.classed(nodeStateHighlight.className)) {\n    return nodeStateHighlight;\n  } else if (nodeEles.classed(nodeStateSearch.className)) {\n    return nodeStateSearch;\n  } else if (nodeEles.classed(nodeStateHighlightNeighbour.className)) {\n    return nodeStateHighlightNeighbour;\n  } else if (nodeEles.classed(nodeStateUnhighlighted.className)) {\n    return nodeStateUnhighlighted;\n  }\n  return nodeStateDefault;\n}\n","export function getUrlParameter(sParam: string): string | null {\n  const sPageURL = decodeURIComponent(window.location.search.substring(1));\n  return getKeysFromString(sPageURL, sParam);\n}\n\nexport function setUrlParameter(sParam: string, sValue: string) {\n  const sPageURL = decodeURIComponent(window.location.search.substring(1));\n\n  const sURLQueryParams = updateKeysInString(sPageURL, [{ sParam, sValue }]);\n\n  const queryFilters = '?' + sURLQueryParams;\n  window.history.pushState({}, '', queryFilters);\n}\n\nconst paramArraySeparator: string = '},{';\n\nexport function getUrlParameterAsArray(sParam: string): string[] {\n  const paramValueStr = getUrlParameter(sParam);\n  if (paramValueStr === null) {\n    return [];\n  }\n  if (paramValueStr.length > 1) {\n    const p = paramValueStr.substring(1, paramValueStr.length - 1);\n    const paramValues = p.split(paramArraySeparator).map(s =>\n      s\n        .replace(/zzamp/g, '&')\n        .replace(/zzeq/g, '=')\n        .replace(/zzhash/g, '#')\n        .replace(/zzpercent/g, '%')\n    );\n    return paramValues;\n  }\n  return [];\n}\n\nexport function setUrlParameterAsArray(sParam: string, sValueArray: string[]) {\n  let sValue = '';\n  if (sValueArray.length > 0) {\n    sValue =\n      '{' +\n      sValueArray\n        .map(s =>\n          s\n            .replace(/&/g, 'zzamp')\n            .replace(/=/g, 'zzeq')\n            .replace(/#/g, 'zzhash')\n            .replace(/%/g, 'zzpercent')\n        )\n        .join(paramArraySeparator) +\n      '}';\n  }\n  setUrlParameter(sParam, sValue);\n}\n\nfunction getKeysFromString(keysString: string, sParam: string): string | null {\n  const sURLVariables = keysString.split('&');\n  for (const sUrlVariable of sURLVariables) {\n    const sParameterName = sUrlVariable.split('=');\n\n    if (sParameterName[0] === sParam) {\n      return sParameterName[1] === undefined ? null : sParameterName[1];\n    }\n  }\n  return null;\n}\n\nfunction updateKeysInString(keysString: string, paramPairs: Array<{ sParam: string; sValue: string }>): string {\n  const sURLVariables = keysString.length > 0 ? keysString.split('&') : [];\n  for (const paramPair of paramPairs) {\n    let parameterUpdated = false;\n    for (let i = 0; i < sURLVariables.length; i++) {\n      const sParameterName = sURLVariables[i].split('=');\n\n      if (sParameterName[0] === paramPair.sParam) {\n        sURLVariables[i] = paramPair.sParam + '=' + (paramPair.sValue || '');\n        parameterUpdated = true;\n      }\n    }\n    if (parameterUpdated === false) {\n      sURLVariables.push(paramPair.sParam + '=' + (paramPair.sValue || ''));\n    }\n  }\n  return sURLVariables.join('&');\n}\n","import './app.css';\nimport './forms.css';\nimport * as diagram from './diagram';\nimport * as React from 'react';\nimport { getUrlParameterAsArray, setUrlParameterAsArray, getUrlParameter, setUrlParameter } from './utils/url-query-param-utils';\n\nexport interface AppState {\n  inputHighlightText: string;\n  showAllLabels: boolean;\n  showOnlyHighlighted: boolean;\n  highlightedNodeNames: string[];\n  invertBackground: boolean;\n  hasForceSimulation: boolean;\n}\n\nconst urlParamLabelShowOnlyHighlighted = 'showHlOnly';\nconst urlParamLabelHighlightedNodes = 'hlNodes';\n\nexport class App extends React.Component<{}, AppState> {\n  constructor(props: {}) {\n    super(props);\n\n    let showOnlyHighlighted = getUrlParameter(urlParamLabelShowOnlyHighlighted) === 'y';\n    const highlightedNodeNames = getUrlParameterAsArray(urlParamLabelHighlightedNodes);\n    if (showOnlyHighlighted && highlightedNodeNames.length === 0) {\n      setUrlParameter(urlParamLabelShowOnlyHighlighted, '');\n      showOnlyHighlighted = false;\n    }\n\n    this.state = {\n      inputHighlightText: '',\n      showAllLabels: false,\n      showOnlyHighlighted,\n      highlightedNodeNames,\n      invertBackground: false,\n      hasForceSimulation: true,\n    };\n\n    this.handleInputHighlightText = this.handleInputHighlightText.bind(this);\n    this.handleShowAllLabels = this.handleShowAllLabels.bind(this);\n    this.handleShowOnlyHighlighted = this.handleShowOnlyHighlighted.bind(this);\n    this.handleHighlightedNodesChanged = this.handleHighlightedNodesChanged.bind(this);\n    this.updateShowAllLabels = this.updateShowAllLabels.bind(this);\n    this.updateInputHighlightText = this.updateInputHighlightText.bind(this);\n    this.handleInvertBackground = this.handleInvertBackground.bind(this);\n    this.handleHasForceSimulation = this.handleHasForceSimulation.bind(this);\n    this.handleSearchForNodesClick = this.handleSearchForNodesClick.bind(this);\n  }\n\n  public componentDidMount() {\n    diagram.load(this.handleHighlightedNodesChanged, this.state.highlightedNodeNames, this.state.showOnlyHighlighted);\n  }\n\n  public render() {\n    return (\n      <div>\n        <div className=\"header row\">\n          <h1 className=\"col-4\">Service Registry Diagram</h1>\n          <div className=\"col-8 config-box\">\n            <label className={this.state.showOnlyHighlighted ? 'disabled' : ''}>Search</label>\n            <input\n              name=\"inputSearch\"\n              type=\"text\"\n              onChange={this.handleInputHighlightText}\n              value={this.state.inputHighlightText}\n              disabled={this.state.showOnlyHighlighted}\n            />\n            <button id=\"btnHighlight\" onClick={this.handleSearchForNodesClick} disabled={this.state.showOnlyHighlighted}>\n              Highlight\n            </button>\n            <input\n              id=\"chkboxShowAllLabels\"\n              type=\"checkbox\"\n              checked={this.state.showAllLabels}\n              onChange={this.handleShowAllLabels}\n              disabled={this.state.showOnlyHighlighted}\n            />\n            <label htmlFor=\"chkboxShowAllLabels\">Show all labels</label>\n            <input\n              id=\"chkboxShowOnlyHighlighted\"\n              type=\"checkbox\"\n              checked={this.state.showOnlyHighlighted}\n              onChange={this.handleShowOnlyHighlighted}\n              disabled={this.state.highlightedNodeNames.length === 0}\n            />\n            <label htmlFor=\"chkboxShowOnlyHighlighted\">Show only highlighted</label>\n            <input id=\"chkboxInvertBackground\" type=\"checkbox\" checked={this.state.invertBackground} onChange={this.handleInvertBackground} />\n            <label htmlFor=\"chkboxInvertBackground\">Invert Background</label>\n            <input id=\"chkboxHasForceSimulation\" type=\"checkbox\" checked={this.state.hasForceSimulation} onChange={this.handleHasForceSimulation} />\n            <label htmlFor=\"chkboxHasForceSimulation\">Force</label>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          <div id=\"diagram\" className={this.state.invertBackground ? 'inverted' : ''} />\n          <div id=\"info-box\">\n            <h2 className=\"title\" />\n            <div className=\"notes\" />\n            <table className=\"table\" />\n            <div className=\"timestamp\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private updateShowAllLabels(showAllLabels: boolean) {\n    this.setState({ showAllLabels });\n    diagram.showAllLabels(showAllLabels);\n  }\n\n  private updateInputHighlightText(txt: string) {\n    this.setState({ inputHighlightText: txt });\n    diagram.searchForNodes(txt);\n  }\n\n  private handleHighlightedNodesChanged(highlightedNodeNames: string[]) {\n    this.setState({ highlightedNodeNames });\n    setUrlParameterAsArray(urlParamLabelHighlightedNodes, highlightedNodeNames);\n    if (highlightedNodeNames.length === 0 && this.state.showOnlyHighlighted) {\n      this.setState({ showOnlyHighlighted: false });\n      setUrlParameter(urlParamLabelShowOnlyHighlighted, '');\n    }\n  }\n\n  private handleSearchForNodesClick() {\n    diagram.searchForNodes(this.state.inputHighlightText);\n  }\n\n  private handleInputHighlightText(event: React.ChangeEvent<HTMLInputElement>) {\n    const newVal = event.currentTarget.value;\n    this.updateInputHighlightText(newVal);\n    event.preventDefault();\n  }\n\n  private handleShowAllLabels(event: React.ChangeEvent<HTMLInputElement>) {\n    const newVal = event.currentTarget.checked;\n    this.updateShowAllLabels(newVal);\n  }\n\n  private handleShowOnlyHighlighted(event: React.ChangeEvent<HTMLInputElement>) {\n    const newVal = event.currentTarget.checked;\n    this.setState({ showOnlyHighlighted: newVal });\n    setUrlParameter(urlParamLabelShowOnlyHighlighted, newVal ? 'y' : '');\n    diagram.showOnlyHighlighted(newVal);\n    if (newVal === true && this.state.showAllLabels === true) {\n      this.updateShowAllLabels(false);\n    }\n  }\n\n  private handleInvertBackground(event: React.ChangeEvent<HTMLInputElement>) {\n    const newVal = event.currentTarget.checked;\n    this.setState({ invertBackground: newVal });\n    diagram.invertBackground(newVal);\n  }\n\n  private handleHasForceSimulation(event: React.ChangeEvent<HTMLInputElement>) {\n    const newVal = event.currentTarget.checked;\n    this.setState({ hasForceSimulation: newVal });\n    diagram.setHasForceSimulation(newVal);\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log('New content is available and will be used when all ' + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.');\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}